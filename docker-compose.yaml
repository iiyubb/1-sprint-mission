services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-8081}:8080"
    environment:
      # Spring 기본 설정
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
      - SPRING_SERVLET_MULTIPART_MAXFILESIZE=${SPRING_SERVLET_MULTIPART_MAXFILESIZE:-10MB}
      - SPRING_SERVLET_MULTIPART_MAXREQUESTSIZE=${SPRING_SERVLET_MULTIPART_MAXREQUESTSIZE:-30MB}

      # 데이터베이스 설정
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO:-validate}
      - SPRING_JPA_OPEN_IN_VIEW=false

      # JVM 옵션
      - JVM_OPTS=${JVM_OPTS:--Xmx512m -Xms256m}

      # 스토리지 설정
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - STORAGE_LOCAL_ROOT_PATH=${STORAGE_LOCAL_ROOT_PATH:-.discodeit/storage}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_PRESIGNED_URL_EXPIRATION=${AWS_S3_PRESIGNED_URL_EXPIRATION:-600}

      # 로깅 설정
      - LOGGING_LEVEL_ROOT=${LOGGING_LEVEL_ROOT:-info}
    volumes:
      - binary-content-storage:${STORAGE_LOCAL_ROOT_PATH:-.discodeit/storage}
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: unless-stopped

volumes:
  binary-content-storage:
    driver: local
  postgres-data:
    driver: local